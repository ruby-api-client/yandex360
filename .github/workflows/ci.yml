name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  COVERAGE: true

jobs:
  lint:
    name: Lint & Security
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1.265.0
        with:
          ruby-version: "3.1"
          bundler-cache: true

      - name: Run RuboCop
        run: bundle exec rubocop --format github

      - name: Run security audit
        run: |
          gem install bundler-audit
          bundle audit --update

  test:
    name: Test (Ruby ${{ matrix.ruby }} on ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        ruby: ["3.1", "3.2", "3.3"]
        exclude:
          # Windows has issues with older Ruby versions
          - os: windows-latest
            ruby: "2.6"
          # macOS ARM64 runners have limited Ruby version support
          - os: macos-latest
            ruby: "2.6"

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1.265.0
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true

      - name: Run tests
        run: bundle exec rspec --format progress

      - name: Upload coverage (Ubuntu Ruby 3.1 only)
        if: matrix.os == 'ubuntu-latest' && matrix.ruby == '3.1'
        uses: coverallsapp/github-action@v2.3.6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./coverage/lcov/yandex360.lcov

  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1.265.0
        with:
          ruby-version: "3.1"
          bundler-cache: true

      - name: Test gem installation
        run: |
          gem build yandex360.gemspec
          gem install yandex360-*.gem

      - name: Test require
        run: ruby -e "require 'yandex360'; puts 'Gem loads successfully'"

  dependency-check:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: moderate

  performance:
    name: Performance Benchmark
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1.265.0
        with:
          ruby-version: "3.1"
          bundler-cache: true

      - name: Run benchmark
        run: |
          echo "Running basic performance check..."
          time bundle exec ruby -e "
            require 'yandex360'
            start = Time.now
            1000.times { Yandex360::Client.new(token: 'test') }
            puts \"Client creation time: #{Time.now - start}s\"
          "

  release-dry-run:
    name: Release Dry Run
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1.265.0
        with:
          ruby-version: "3.1"
          bundler-cache: true

      - name: Build gem
        run: gem build yandex360.gemspec

      - name: Check gem contents
        run: |
          gem spec yandex360-*.gem
          tar -tf yandex360-*.gem | head -20

  notify:
    name: Notify Success
    runs-on: ubuntu-latest
    needs: [lint, test, integration]
    if: always() && (needs.lint.result == 'success' && needs.test.result == 'success' && needs.integration.result == 'success')
    steps:
      - name: Success notification
        run: echo "âœ… All CI checks passed successfully!"
